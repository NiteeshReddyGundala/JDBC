package com.Niteesh.app.dao;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;

import com.Niteesh.app.Factory.ConnectionFactory;
import com.Niteesh.app.dto.Student;
public class StudentDaoImp1 implements StudentDao {

	@Override
	public String add(Student student) {
		String status = "";
		try {
			Connection con = ConnectionFactory.getConnection();
			Statement st = con .createStatement();
			Student std =search(student.getSid());
			if(std==null) {
				int rowCount = st.executeUpdate("insert into student values('"+student.getSid()+"','"+student.getSname()+"','"+student.getSaddr()+"')");
				if(rowCount ==1) {
					status = "success";
				}else {
					status = "failure";
				}
			}else {
				status = "existed";
			}
		}catch(Exception e){
			e.printStackTrace();
		}
		return status;
	}

	@Override
	public Student search(String Sid) {
		Student student = null;
	      try {
	    	  Connection con = ConnectionFactory.getConnection();
	    	  Statement st = con.createStatement();
	    	  ResultSet rs = st.executeQuery("select * from student where SID = '"+Sid+"'");
	    	  boolean b = rs.next();
	    	  if(b==true) {
	    		  student = new Student();
	    		  student .setSid(rs.getString("SID"));
	    		  student.setSname(rs.getString("SNAME"));
	    		  student.setSaddr(rs.getString("SADDR"));
	    	  }else {
	    		  student = null;
	    	  }
	    	  
	      }catch(Exception e) {
	    	  e.printStackTrace();
	      }
		return student;
	}

	@Override
	public String update(Student newstudent) {
		String status ="";
		try {
			Connection con = ConnectionFactory.getConnection();
			Statement st =con.createStatement();
			int rowCount = st.executeUpdate("update student set SNAME = '"+newstudent.getSname()+"', SADDR = '"+newstudent.getSaddr()+"' where SID = '"+newstudent.getSid()+"'");
 if(rowCount==1) {
	 status = "success";
	 
 }
 else {
	 status = "failure";
 }
		}catch(Exception e) {
			status = "failure";
			e.printStackTrace();
		}
		return status;
	}

	@Override
	public String delete(String Sid) {
		String status ="";
		try {
			Connection con = ConnectionFactory.getConnection();
			Statement st = con.createStatement();
			Student student = search(Sid);
			if(student==null) {
				status = "notexisted";
			}else {
				int rowCount = st.executeUpdate("delete from student where SID = '"+Sid+"'");
				if(rowCount==1) {
					status = "success";
				}else {
					status = "failure";
				}
			}
			
		}catch(Exception e) {
			e.printStackTrace();
		}
		return status;
	}

}
